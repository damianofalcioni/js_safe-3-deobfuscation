/*
The decoded payload for the y=pd is something like:
let b=/x/;b.toString=function(){while(1)1};console.log('',b);/ *hide* /d(x=>/ *...* /1,x=>/ *...* /1)â€ˆ

The first section is a eval protection that loop infinitely then the d function is called with 2 functions with commented payloads. 
For both of them, like in the debug_snippet_2.js in order to avoid formatting issue is better to provide directly the string as parameter, in form of code array as the original payload and use the String.fromCharCode function. We can search in the payload the SECOND/THIRD occurrence of the / * characters (the first one is the comment hide). You can use the code console.log('/'.charCodeAt(0) + ', ' + '*'.charCodeAt(0)); for knowing the char code of / and * (47, 42) and a text editor to search the SECOND/THIRD occurrence and copy the codes between 47, 42 and 42, 47
*/
ord = Function.prototype.call.bind(''.charCodeAt);
chr = String.fromCharCode;

function d(a, b, c) {
  function bytelist(x) {
    if (typeof x == 'function') {
      x = x.toString();
      x = x.slice(x.indexOf('/*') + 2, x.lastIndexOf('*/'))
    }
    if (typeof x == 'string') return x.split('').map(x => ord(x));
    if (typeof x == 'object') return x
  }
  a = bytelist(a);
  b = bytelist(b);
  var dbg = 'String.fromCharCode(';
  for (var i = 0; i != a.length; i++) {
      c = (c || '') + chr(a[i] ^ b[i % b.length]);
      dbg += '' + (a[i] ^ b[i % b.length]) + ', ';
  }
  console.log('string = ' + c);
  console.log('codes = ' + dbg);
  //return eval('eval(c)');
}

d(
String.fromCharCode(11, 63, 95, 41, 14, 15, 110, 105, 14, 29, 105, 41, 36, 8, 91, 4, 43, 31, 119, 10, 19, 45, 125, 1, 31, 123, 38, 84, 77, 38, 46, 26, 69, 51, 34, 2, 17, 110, 104, 15, 28, 48, 111, 6, 8, 49, 33, 42, 21, 43, 101, 16, 23, 51, 123, 86, 16, 49, 64, 77, 17, 62, 86, 7, 15, 54, 126, 28, 95, 32, 36, 67, 89, 56, 45, 94, 74, 115, 37, 70, 72, 32, 122, 68, 20, 62, 35, 87, 97, 104, 54, 89, 77, 0, 106, 13, 138, 118, 49, 19, 2, 32, 33, 76, 31, 123, 106, 82, 3, 114, 103, 12, 15, 42, 94, 3, 9, 32, 127, 17, 10, 61, 115, 24, 52, 106, 98, 212, 94, 47, 119, 108, 19, 112, 61, 21, 115, 19, 96, 117, 79, 84, 117, 109, 0, 9, 66, 63, 29, 108, 93, 19, 21, 107, 46, 105, 25, 106, 13, 77, 40, 108, 87, 92, 10, 123, 247, 31, 26, 53, 101, 88, 29, 102, 98, 82, 4, 37, 125, 0, 31, 2, 34, 78, 70, 93, 63, 78, 7, 44, 35, 17, 17, 107, 122, 27, 90, 50, 125, 13, 22, 101, 61, 86, 71, 105, 44, 84, 90, 49, 49, 16, 23, 32, 105, 3, 80, 60, 60, 85, 12, 105, 112, 13, 77, 59, 37, 69, 29, 115, 118, 92, 84, 101, 99, 22, 64, 102, 124, 91, 64, 111, 54, 11, 23, 121, 46, 10, 88, 35, 52, 78, 84, 112, 113, 29, 17, 105, 100, 76, 23, 54, 35, 4, 81, 55, 108, 13, 75, 43, 120, 83, 90, 43, 100, 99, 28, 117, 125, 9, 18, 23, 99, 23, 80, 46, 79, 34, 14, 93, 108, 33, 14, 81, 105, 38, 13, 85, 5, 45, 45, 21, 74, 34, 122)
,
String.fromCharCode(114, 2, 98, 11, 114, 53, 67, 64, 114, 39, 68, 0, 88, 50, 118, 45, 87, 37, 90, 35, 111, 23, 80, 40, 99, 65, 11, 125, 49, 28, 3, 51, 57, 9, 15, 43, 109, 84, 69, 38, 96, 10, 66, 47, 116, 11, 12, 3, 105, 17, 72, 57, 107, 9, 86, 127, 108, 11, 109, 100, 109, 4, 123, 46, 115, 12, 83, 53, 35, 26, 9, 106, 37, 2, 0, 119, 54, 73, 8, 111, 52, 26, 87, 109, 104, 4, 14, 126, 29, 82, 27, 112, 49, 58, 71, 36, 246, 76, 28, 58, 126, 26, 12, 101, 99, 65, 71, 123, 127, 72, 74, 37, 115, 16, 115, 42, 117, 26, 82, 56, 118, 7, 94, 49, 72, 80, 79, 253, 34, 21, 90, 69, 111, 74, 16, 60, 15, 41, 77, 92, 51, 110, 88, 68, 124, 51, 111, 22, 97, 86, 112, 58, 105, 81, 3, 64, 101, 80, 32, 100, 84, 86, 122, 117, 118, 65, 218, 54, 102, 15, 72, 113, 97, 92, 79, 123, 120, 31, 80, 41, 99, 56, 15, 103, 58, 103, 18, 103, 123, 22, 14, 56, 109, 81, 87, 50, 38, 8, 80, 36, 106, 95, 16, 127, 59, 83, 1, 125, 38, 11, 28, 57, 107, 26, 68, 42, 44, 6, 17, 124, 112, 83, 93, 36, 49, 1, 8, 108, 97, 73, 91, 117, 40, 95, 78, 63, 60, 92, 81, 114, 60, 85, 27, 34, 107, 67, 3, 35, 36, 25, 25, 103, 40, 74, 92, 52, 109, 83, 73, 101, 107, 12, 14, 45, 45, 13, 65, 36, 55, 17, 85, 122, 38, 17, 73, 74, 96, 79, 80, 32, 110, 45, 78, 62, 44, 20, 98, 11, 114, 103, 65, 8, 114, 107, 68, 15, 113, 111, 40, 4, 81, 47, 103, 11, 88)
);

/*
output:
y=="|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)|:-)"
*/